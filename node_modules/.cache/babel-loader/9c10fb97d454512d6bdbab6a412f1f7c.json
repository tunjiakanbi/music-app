{"ast":null,"code":"var _jsxFileName = \"/Users/ac7236yr/Desktop/vct2125/MusicApp/music-app/src/Test.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { textIntro } from \"./Intro\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  let intro = useRef('null');\n  const [music, setMusic] = useState([]);\n  useEffect(() => {\n    // textIntro(intro);\n    const getData = () => {\n      fetch(\"data.json\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }).then(response => response.json()).then(data => setMusic(data));\n    };\n\n    getData();\n    textIntro(intro);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"intro\",\n      ref: el => intro = el,\n      children: \"My Awesome Music App!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), music.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"artists\",\n        children: [\"Artist: \", m.artistname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Album: \", m.album]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Record Label: \", m.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Release Year: \", m.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: m.albumImg,\n        alt: m.artistname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Artist Bio:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: m.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, m.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"Gnt8EAjujGgCfLFICnPxk/uJeq8=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/ac7236yr/Desktop/vct2125/MusicApp/music-app/src/Test.js"],"names":["useEffect","useRef","useState","textIntro","Test","intro","music","setMusic","getData","fetch","headers","Accept","then","response","json","data","el","map","m","artistname","album","label","year","albumImg","bio","id"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,SAAR,QAAwB,SAAxB;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACZ,MAAIC,KAAK,GAAGJ,MAAM,CAAC,MAAD,CAAlB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMQ,OAAO,GAAG,MAAM;AAClBC,MAAAA,KAAK,CAAC,WAAD,EAAc;AACXC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE;AAFD;AADE,OAAd,CAAL,CAMCC,IAND,CAMOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOOG,IAAD,IAAUR,QAAQ,CAACQ,IAAD,CAPxB;AASH,KAVD;;AAYRP,IAAAA,OAAO;AACPL,IAAAA,SAAS,CAACE,KAAD,CAAT;AACC,GAhBY,EAgBV,EAhBU,CAAT;AAmBA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAE,OAAf;AAAuB,MAAA,GAAG,EAAGW,EAAD,IAASX,KAAK,GAAGW,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEIV,KAAK,CAACW,GAAN,CAAWC,CAAD,iBACP;AAAA,8BACA;AAAI,QAAA,EAAE,EAAC,SAAP;AAAA,+BAA0BA,CAAC,CAACC,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,8BAAYD,CAAC,CAACE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,qCAAmBF,CAAC,CAACG,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAA,qCAAmBH,CAAC,CAACI,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAKA;AAAK,QAAA,GAAG,EAAEJ,CAAC,CAACK,QAAZ;AAAsB,QAAA,GAAG,EAAEL,CAAC,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,cALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANA,eAOC;AAAA,kBAAID,CAAC,CAACM;AAAN;AAAA;AAAA;AAAA;AAAA,cAPD;AAAA,OAAUN,CAAC,CAACO,EAAZ;AAAA;AAAA;AAAA;AAAA,YADH,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAtCQrB,I;;KAAAA,I;AAwCT,eAAeA,IAAf","sourcesContent":["import {useEffect, useRef, useState} from \"react\";\nimport {textIntro} from \"./Intro\";\nfunction Test() {\n    let intro = useRef('null');\n    const [music, setMusic] = useState([]);\n    useEffect(() => {\n        // textIntro(intro);\n        const getData = () => {\n            fetch(\"data.json\", {\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                      Accept: \"application/json\"\n                    }\n            })\n            .then((response) => response.json())\n            .then((data) => setMusic(data));\n\n        };\n\ngetData();\ntextIntro(intro);\n}, []);\n\n\n    return (\n        <div>\n            <h1 className =\"intro\" ref={(el) => (intro = el)}>My Awesome Music App!</h1>\n           {music.map((m) => (\n               <div key={m.id}>\n               <h2 id=\"artists\">Artist: {m.artistname}</h2>\n               <h2>Album: {m.album}</h2>\n               <h2>Record Label: {m.label}</h2>\n               <h2>Release Year: {m.year}</h2>\n               <img src={m.albumImg} alt={m.artistname}/>\n               <h4>Artist Bio:</h4>\n                <p>{m.bio}</p>\n               </div>\n           ))} \n        </div>\n    )\n}\n\nexport default Test\n"]},"metadata":{},"sourceType":"module"}